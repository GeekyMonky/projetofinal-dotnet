<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <base href="/" />
    <link rel="stylesheet" href="@Assets["lib/bootstrap/dist/css/bootstrap.min.css"]" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.0/font/bootstrap-icons.css" />
    <link rel="stylesheet" href="@Assets["app.css"]" />
    <link rel="stylesheet" href="@Assets["ProjetoFinal.WebApp.styles.css"]" />
    <link href="https://fonts.googleapis.com/css2?family=Source+Code+Pro:wght@300;400;500;700&display=swap" rel="stylesheet" />
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500;700&display=swap" rel="stylesheet" />
    <link href="https://fonts.googleapis.com/css2?family=Roboto+Mono:wght@300;400;500;700&display=swap" rel="stylesheet" />
    <link href="@Assets["_content/MudBlazor/MudBlazor.min.css"]" rel="stylesheet" />
    <ImportMap />
    <link rel="icon" type="image/png" href="favicon.png" />
    <HeadOutlet />
</head>

<body>
    <Routes />
    <script src="_framework/blazor.web.js"></script>
    <script src="@Assets["_content/MudBlazor/MudBlazor.min.js"]"></script>
    
    <script>
        let navCrosshairAnimation = null;
        let homeCrosshairAnimation = null;
        let navIsPaused = false;
        let homeIsPaused = false;
        
        // Positions for navbar (smaller)
        const navPositions = [
            { x: 0, y: -20 },    // Top
            { x: 14, y: -14 },   // Top-right
            { x: 20, y: 0 },     // Right
            { x: 14, y: 14 },    // Bottom-right
            { x: 0, y: 20 },     // Bottom
            { x: -14, y: 14 },   // Bottom-left
            { x: -20, y: 0 },    // Left
            { x: -14, y: -14 }   // Top-left
        ];
        
        // Positions for home page (larger)
        const homePositions = [
            { x: 0, y: -40 },    // Top
            { x: 28, y: -28 },   // Top-right
            { x: 40, y: 0 },     // Right
            { x: 28, y: 28 },    // Bottom-right
            { x: 0, y: 40 },     // Bottom
            { x: -28, y: 28 },   // Bottom-left
            { x: -40, y: 0 },    // Left
            { x: -28, y: -28 }   // Top-left
        ];
        
        function moveNavCrosshair() {
            const crosshair = document.getElementById('crosshair-element');
            if (!crosshair || navIsPaused) return;
            
            const pos = navPositions[Math.floor(Math.random() * navPositions.length)];
            crosshair.style.setProperty('--x', pos.x + 'px');
            crosshair.style.setProperty('--y', pos.y + 'px');
            
            console.log(`📍 Nav crosshair moved to: ${pos.x}, ${pos.y}`);
        }
        
        function moveHomeCrosshair() {
            const crosshair = document.getElementById('home-crosshair-element');
            if (!crosshair || homeIsPaused) return;
            
            const pos = homePositions[Math.floor(Math.random() * homePositions.length)];
            crosshair.style.setProperty('--home-x', pos.x + 'px');
            crosshair.style.setProperty('--home-y', pos.y + 'px');
            
            console.log(`🏠 Home crosshair moved to: ${pos.x}, ${pos.y}`);
        }
        
        function startNavAnimation() {
            const crosshair = document.getElementById('crosshair-element');
            if (!crosshair) return false;
            
            console.log('✅ Starting navbar crosshair animation');
            
            moveNavCrosshair();
            navCrosshairAnimation = setInterval(moveNavCrosshair, 2000);
            
            const container = document.querySelector('.ims-logo-container');
            if (container) {
                container.addEventListener('mouseenter', () => {
                    navIsPaused = true;
                    console.log('⏸️ Nav animation paused');
                });
                
                container.addEventListener('mouseleave', () => {
                    navIsPaused = false;
                    console.log('▶️ Nav animation resumed');
                });
            }
            
            return true;
        }
        
        function startHomeAnimation() {
            const crosshair = document.getElementById('home-crosshair-element');
            if (!crosshair) return false;
            
            console.log('✅ Starting home crosshair animation');
            
            moveHomeCrosshair();
            homeCrosshairAnimation = setInterval(moveHomeCrosshair, 2500);
            
            const container = document.querySelector('.home-logo');
            if (container) {
                container.addEventListener('mouseenter', () => {
                    homeIsPaused = true;
                    console.log('⏸️ Home animation paused');
                });
                
                container.addEventListener('mouseleave', () => {
                    homeIsPaused = false;
                    console.log('▶️ Home animation resumed');
                });
            }
            
            return true;
        }
        
        function initAnimations() {
            // Try to start navbar animation
            if (!startNavAnimation()) {
                console.log('⏳ Navbar crosshair not found, will retry...');
            }
            
            // Try to start home animation
            if (!startHomeAnimation()) {
                console.log('⏳ Home crosshair not found, will retry...');
            }
        }
        
        function init() {
            initAnimations();
            
            // Retry every 500ms for elements that weren't found
            let attempts = 0;
            const retry = setInterval(() => {
                const navExists = document.getElementById('crosshair-element');
                const homeExists = document.getElementById('home-crosshair-element');
                
                if (!navCrosshairAnimation && navExists) {
                    startNavAnimation();
                }
                
                if (!homeCrosshairAnimation && homeExists) {
                    startHomeAnimation();
                }
                
                if ((navCrosshairAnimation || !navExists) && (homeCrosshairAnimation || !homeExists) || attempts++ > 20) {
                    clearInterval(retry);
                }
            }, 500);
        }
        
        // Start when DOM is ready
        if (document.readyState === 'loading') {
            document.addEventListener('DOMContentLoaded', init);
        } else {
            init();
        }
    </script>
    <script>
        // Animation for both left and right crosshairs/boxes
        function animateLogos() {
            // Left side - crosshair moves around box
            const crosshairElement = document.getElementById('crosshair-element');
            
            // Right side - box moves around crosshair  
            const boxElementRight = document.getElementById('box-element-right');
            
            function updatePositions() {
                // Generate random positions within a small range
                const range = 8; // pixels
                const leftX = (Math.random() - 0.5) * range;
                const leftY = (Math.random() - 0.5) * range;
                
                const rightX = (Math.random() - 0.5) * range;
                const rightY = (Math.random() - 0.5) * range;
                
                // Left side - move crosshair
                if (crosshairElement) {
                    crosshairElement.style.setProperty('--x', `${leftX}px`);
                    crosshairElement.style.setProperty('--y', `${leftY}px`);
                }
                
                // Right side - move box
                if (boxElementRight) {
                    boxElementRight.style.setProperty('--box-x', `${rightX}px`);
                    boxElementRight.style.setProperty('--box-y', `${rightY}px`);
                }
            }
            
            // Update positions every 2 seconds
            setInterval(updatePositions, 2000);
            
            // Initial position
            updatePositions();
        }
        
        // Start animation when page loads
        document.addEventListener('DOMContentLoaded', animateLogos);
    </script>
</body>

</html>
